<!DOCTYPE html>
<html lang="es">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="ie=edge" />
        <title>Formulario Preguntas</title>
        <!-- <link rel="stylesheet" type="text/css" href="/styles/addquestion.css" /> -->
        <!-- Google Fonts -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css"/>
        <link href="https://fonts.googleapis.com/css?family=Montserrat|Poppins|Raleway&display=swap"rel="stylesheet"/>
    </head>
    <body>

        <div class="container" id="app">
            <form @submit.prevent="save()" class="form">
                <div class="row">
                    <div class="col-sm-12">
                        <h3>Añadir un pregunta</h3>
                        <div class="alert alert-warning" v-if="mensaje" v-html="mensaje"></div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="question">Pregunta: </label>
                            <textarea class="form-control" v-model="pregunta.question" required></textarea>
                        </div>
                        
                        <label for="level">Nivel: </label>
                        <vue-multiselect  multiple v-model="pregunta.level" :options="levels"></vue-multiselect>
                        <!--
                        <select class="form-control" multiple v-model="pregunta.level">
                            <option :value="level" v-html="level" v-for="level in levels"></option>
                        </select>
                        -->
                        
                        <label for="answer">Respuesta Correcta: </label>
                        <select class="form-control" v-model="pregunta.answer" required>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                        </select>

                    </div>
                       
                    <div class="col-sm-6">
                        <label for="option1">Opcion 1: </label>
                        <input type="text" class="form-control" required v-model="pregunta.option1" />

                        <label for="option2">Opcion 2: </label>
                        <input type="text" class="form-control" required v-model="pregunta.option2" />

                        <label for="option3">Opcion 3: </label>
                        <input type="text" class="form-control" required v-model="pregunta.option3" />

                        <label for="option4">Opcion 4: </label>
                        <input type="text" class="form-control" required v-model="pregunta.option4" />
                    </div>
                    <div class="clearfix"></div>

                    <div class="col-sm-12">
                        <br>
                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">Añadir pregunta</button>
                        </div>
                    </div>
                </div>
            </form> 
        </div>
        

        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
        <script src="https://unpkg.com/vue-multiselect@2.1.0"></script>
        <link rel="stylesheet" href="https://unpkg.com/vue-multiselect@2.1.0/dist/vue-multiselect.min.css">


        <script type="text/javascript">

            const preguntaDefault = { level: [1], answer: 1};

            Vue.component('vue-multiselect', window.VueMultiselect.default)

            new Vue({
                el: '#app',
                data: {
                    pregunta: structuredClone(preguntaDefault),
                    levels: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],
                    bloquearBoton: false,
                    mensaje: '',
                },
                methods: {
                    save(){
                        this.bloquearBoton = true;
                        axios.post('question', this.pregunta).then(response => {
                            //this.pregunta = response.data
                            this.mensaje = 'Pregunta modificada/guardada con exito "'+response.data._id+'"';
                            this.pregunta = structuredClone(preguntaDefault);
                        }).catch(error => {
                            console.log(error);
                        }).then(()=>{ this.bloquearBoton = false; });
                    }
                }
            })
            
            /*const form = {
                question: document.getElementById('question'),
                option1: document.getElementById('option1'),
                option2: document.getElementById('option2'),
                option3: document.getElementById('option3'),
                option4: document.getElementById('option4'),
                answer: document.getElementById('answer'),
                slot: document.getElementById('price'),
                messages: document.getElementById('form-messages'),
                status: document.getElementById('status'),
                submit: document.getElementById('btn-submit')
            };

            form.submit.addEventListener('click', () => {
                console.log('Pressed');

                const request = new XMLHttpRequest();

                while (form.messages.firstElementChild) {
                    form.messages.removeChild(form.messages.firstElementChild);
                }
                form.messages.style.display = 'none';

                while (form.status.firstElementChild) {
                    form.status.removeChild(form.status.firstElementChild);
                }
                form.status.style.display = 'none';

                request.onload = () => {
                    let responseObject = null;

                    try {
                        responseObject = JSON.parse(request.responseText);
                    } catch (err) {
                        console.log('Could not parse JSON!');
                    }

                    if (responseObject) handleResponse(responseObject, request.status);
                };

                const requestData = {
                    question: form.question.value,
                    option1: form.option1.value,
                    option2: form.option2.value,
                    option3: form.option3.value,
                    option4: form.option4.value,
                    answer: form.answer.value,
                    slot: form.slot.value
                };

                request.open('post', 'http://localhost:3000/api/add', true);
                request.setRequestHeader('Content-type', 'application/json');
                request.send(JSON.stringify(requestData));
            });

            function handleResponse(responseObject, status) {
                console.log(responseObject);
                console.log(status);
                if (status == 200) {
                    const liQuestionId = document.createElement('li');
                    liQuestionId.textContent =
                        'Question Id: ' + responseObject.question._id;

                    form.status.appendChild(liQuestionId);
                    form.status.style.display = 'block';
                    clear();
                } else {
                    const liError = document.createElement('li');
                    liError.textContent = responseObject.error;
                    form.messages.appendChild(liError);
                    form.messages.style.display = 'block';
                }
            }

            function clear() {
                form.question.value = '';
                form.option1.value = '';
                form.option2.value = '';
                form.option3.value = '';
                form.option4.value = '';
                form.answer.value = '';
            }*/

        </script>

        <!-- <script src="/js/addquestion.js"></script> -->
    </body>
</html>
